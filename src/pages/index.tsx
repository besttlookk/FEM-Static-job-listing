import type { NextPage, GetStaticProps } from "next";
import Head from "next/head";
import fs from "fs/promises";
import path from "path";
import ListItem from "../components/ListItem";
import { useEffect, useState } from "react";
import FilterItem from "../components/FilterItem";
import Footer from "../components/Footer";

interface DataType {
  id: string;
  company: string;
  logo: string;
  new: boolean;
  featured: boolean;
  position: string;
  role: string;
  level: string;
  postedAt: string;
  contract: string;
  location: string;
  languages: string[];
  tools: string[];
}

interface PropType {
  dataArr: DataType[];
}

const Home: NextPage<PropType> = ({ dataArr }) => {
  const [filterArr, setFilterArr] = useState<string[]>([]);
  const [filterDataArr, setFilteredDataArr] = useState<DataType[]>([]);

  useEffect(() => {
    if (filterArr.length > 0) {
      setFilteredDataArr(dataArr.filter(filterCallback));
    } else {
      setFilteredDataArr(dataArr);
    }

    function filterCallback(data: DataType) {
      const tempArr = [data.role, data.level];

      if (data.languages) tempArr.push(...data.languages);
      if (data.tools) tempArr.push(...data.tools);

      return filterArr.every((tag) => tempArr.includes(tag));
    }
  }, [dataArr, filterArr]);
  return (
    <>
      <Head>
        <title>Job Listing</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="absolute  bg-primary top-0 left-0 w-full h-40 bg-header-mobile md:bg-header-desktop bg-no-repeat bg-cover"></div>
      <main className="w-90w mx-auto max-w-5xl md:px-6   pt-32 relative z-10">
        {filterArr.length > 0 && (
          <div className="rounded-md bg-white flex items-center px-4 py-5 gap-2  shadow-xl">
            <div className="flex-1 flex gap-2 flex-wrap">
              {filterArr.map((item) => (
                <FilterItem
                  key={item}
                  item={item}
                  setFilterArr={setFilterArr}
                  filterArr={filterArr}
                />
              ))}
            </div>
            <div className="text-cyan-gray font-bold hover:text-cyan-gray-dark">
              <button onClick={() => setFilterArr([])}>Clear</button>
            </div>
          </div>
        )}

        {/* List */}
        <div className="mt-20">
          {filterDataArr.map((data) => (
            <ListItem
              key={data.id}
              data={data}
              setFilterArr={setFilterArr}
              filterArr={filterArr}
            />
          ))}{" "}
        </div>
      </main>

      <Footer />
    </>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async () => {
  const filePath = path.join(process.cwd(), "data.json");
  const jsonData = await fs.readFile(filePath);
  const data = JSON.parse(jsonData.toString());

  return {
    props: {
      dataArr: data,
    },
  };
};
